import "@/styles/globals.css";

import { type Metadata } from "next";
import { Geist } from "next/font/google";

import { TRPCReactProvider } from "@/trpc/react";

export const metadata: Metadata = {
  title: "T3",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

// TODO: change font
const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en" className={`${geist.variable}`}>
      <body>
        {/* 
          TRPCReactProvider 是一个上下文提供者组件，为整个应用提供 tRPC 客户端功能：
          
          主要功能：
          1. 提供 tRPC 客户端实例 - 用于与后端 API 进行类型安全的通信
          2. 集成 React Query - 提供数据获取、缓存和状态管理功能
          3. 配置 HTTP 批处理链接 - 优化网络请求性能
          4. 设置日志记录 - 在开发环境中提供调试信息
          5. 处理服务器端渲染 (SSR) 兼容性
          
          通过这个 Provider，应用中的所有子组件都可以使用 tRPC hooks 
          (如 useQuery, useMutation) 来调用后端 API，享受类型安全和自动缓存的好处
        */}
        <TRPCReactProvider>{children}</TRPCReactProvider>
      </body>
    </html>
  );
}
